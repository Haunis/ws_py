"""
一维数组的切片,和Python中的切片一样

多维数组的切片,相当于matlab里取矩阵的子矩阵
    arr[arg1,arg2] #如果arg1和arg有一个是单列或者单行,返回结果是一维数组;否则返回二维数组
"""

import numpy as np

print("----------------1.一维数组的切片---------------")
nda = np.arange(10)
print(nda)
print(nda[2])
print(nda[-1])
print(nda[1:4])

print("\n----------------2.多维数组的切片---------------")
nda = np.arange(12).reshape(3, 4)
print("原数组：\n", nda)
"""
 [[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]]
"""
print("\n-------------2.1.取某一列元素--------------")
print("arr[:,1]: ", nda[:, 1])  # [1 5 9]; 一维，在所有行中，第1列元素,和matlab一样

print("\n-------------2.2.在某一列中取元素-------------")
print("arr[1:3, 3]:", nda[1:3, 3])  # [ 7 11]； 一维:第3列，第[1,3)行

print("\n-------------2.3.取某一行元素--------------")
print("nda[1]:", nda[1])  # [ 4  5  6  7]

print("\n-------------2.4.在某一行中取元素-------------")
print("arr[0, 1:3] : ", nda[0, 1:3])  # [1 2]; 索引第0行中，取[1,3)

print("\n-------------2.5.在某些行取某些列-------------")
print("nda[1:3, 1:3]= \n", nda[1:3, 1:3])  # ;shape是(2, 2) 二维; [1,3)行，[1,3)取元素
"""
 [[ 5  6]
 [ 9 10]]
"""

print("----------------")

# 从两个序列的对应位置取出两个整数来组成下标：arr[0,1],arr[1,3]
# 相当于arr[arr[0,1],arr[1,3]]
print('索引结果1：', nda[(0, 1), (1, 3)])  # 一维

print('索引结果2：', nda[1:2, (0, 2, 3)])  # 返回二维;索引第1到2行,第0、2、3列的元素

mask = np.array([1, 0, 1], dtype=np.bool)  # mask是一个布尔数组
print('索引结果3：', nda[mask, 1])  # 一维; 索引第0,2行中第1列元素
