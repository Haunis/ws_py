GIL:全局解释器锁；

使用cpython运行python的多线程,多线程是假的并发
由于GIL锁的存在，同一时刻只能有一个线程在运行,不能发挥cpu多核cpu的优势

原因:历史原因，c语言写的解释器遗留的历史问题
	但用java写的解释器没有该问题

python语言和GIL没半毛钱关系,是解释器cpython有GIL锁

虽然有GIL的存在，但是在进行网络爬虫时，多线程还是比单线程要快，因为多线程
可以利用recv()等待的时间进行再次请求

cpython为何不移除GIL：不容易移除

如何解决GIL：1.换解释器，如换成java写的解释器  2.使用别的语言编写，再用python调用

io密集型适合用：多线程(cpython解释器),协程; 
计算密集型适合用：多进程--充分发挥多核cpu的优势
