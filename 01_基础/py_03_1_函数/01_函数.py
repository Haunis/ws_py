"""
定义一个函数时，函数名就是一个变量，该变量指向一块区域，并可以赋值给其他变量

函数在使用变量时查找规则:
    如果在函数内部有定义过就直接使用,未定义就到外部查找全局变量

调用函数时传递的是实参的引用, 函数处理时用一个新变量接收实参的引用(指向同一个对象实体,id()获取的是对象实体的地址,所以会id()获取的地址相等)
返回的也是数据的引用,而不是数据本身

是值传递,只不过传递的是引用,和java一样

所有的函数名都是变量,指向特定的函数;如果两个导入的两个模块含有相同的函数名,后导入的
会覆盖先导入的

"""


def print_hello():
    print("print_hello called")


def sum(x, y):
    """
    形参,作用: 1.告诉外界调用函数的地方可以接受参数的数量 2.在函数内部当变量使用
    函数的注释在下面
    """
    z = x + y
    return z


print("----------1.print_hello()-----------------")
print_hello()

print("----------2.sum()-----------------")
a = 10
b = 20
result = sum(a, b)  # 传入的是实参;使用变量接收函数执行的结果

print("%d + %d = %d" % (a, b, result))

print("----------3.用变量接受函数变量-----------------")
test = print_hello
test()
