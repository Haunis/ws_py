#! /usr/bin/python3
"""
程序：是没有运行的储存在硬盘上的文件，运行起来就是进程
进程：操作系统分配资源的单位。进程可以调用cpu、内存、硬盘、网卡等资源
    进程也是实现多任务的一种方式
    进程耗费的资源比较大:子进程和主进程拥有一样的代码和资源(内存等),代码共享,写时拷贝
    主进程和子进程代码共享是一样的,但是要更改的变量等是不共享的(每个进程都会储存在自己的进程空间)

写时拷贝:写的时候才拷贝,如果子进程通过某种手段修改了代码,就会将代码拷贝一份

进程的状态：
        启动            调度          结束
    新建------→  就绪 ←-------→  运行 ------→  死亡
                    ↖        ↙
             满足条件  ↖    ↙ 等待条件
                    等待（阻塞）

主进程会等待子进程结束后才会终止

进程和线程的区别:
    进程:操作系统分配资源的单位
        是资源和代码的总称,包括代码,内存,显示器,摄像头,网络,硬盘
    线程:是操作系统调度的单位
        是进程里具体执行任务的执行者(线程执行,就是操作系统在调度).一个进程里至少一个线程
        线程依赖进程,先有进程,再有线程
"""
import multiprocessing
import time


def fun1():
    while True:
        print("1---------------------")
        time.sleep(1)


def fun2():
    while True:
        print("2---------------------")
        time.sleep(1)


def main():
    p1 = multiprocessing.Process(target=fun1)
    p2 = multiprocessing.Process(target=fun2)
    p1.start()  # 创建一个子进程;子进程和原先的主进程拥有一样的代码和资源,就是把主进程的资源复制一份
    p2.start()


if __name__ == "__main__":
    main()
    print("主进程close")  # 会执行,但主进程不会结束
